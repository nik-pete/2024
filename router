#############################################
# доменное имя
####Linux:
hostnamectl set-hostname ИМЯ.ДОМЕН

#####EcoRouter:
enable
configure terminal
hostname ИМЯ
ip domain-name ДОМЕН


###vESR:
configure
hostname ИМЯ
domain name ДОМЕН




###########################################################
#Ecorouter
#Uplink
r#conf t
r(config)#interface Uplink					    	            	Создаем интерфейс с именем ISP (имя произвольное)
r(config-if)#ip address 172.200.40.102/28
r(config-if)#no shutdown
r(config-if)#exit

r(config)#port ge0									                  	Заходим в режим настройки порта
r(config-port)#service-instance Internet			  	    	Создаем сервисный интерфейс с именем Internet (имя произвольное) 
r(config-port)#encapsulation untagged				         	Указываем что трафик не тегированный
r(config-service-instance)#connect ip interface uplink		Указание в какой интерфейс нужно отправить обработанные кадры.r-dt(config-service-instance)#
r(config-service-instance)#exit
r(config-service-instance)#exit

r-dt(config)#ip route 0.0.0.0/0 172.200.40.101


#downlink
r(config)#interface v11						                     Создаем интерфейс с именем v110 (имя произвольное)
r(config-if)#ip address 192.168.3.1/26
r(config-if)#no shutdown
r(config-if)#exit
r(config)#interface v33
r(config-if)#ip address 192.168.3.65/29
r(config-if)#no shutdown
r(config-if)#exit


r(config)#port ge1
r(config-port)#service-instance ge1/vlan11             			Создаем сабинтерфейс с именем ge1/vlan110 (имя произвольное) 
r(config-service-instance)#encapsulation dot1q 11 exact			Указываем номер обрабатываемого VLAN
r(config-service-instance)#rewrite pop 1							         Снимаем метку VLAN, чтобы передать кадр на L3 интерфейс
r(config-service-instance)#connect ip interface v11			  	Указание в какой интерфейс нужно отправить обработанные кадры.
r(config-service-instance)#exit
r(config-port)#service-instance ge1/vlan33
r(config-service-instance)#encapsulation dot1q 33 exact
r(config-service-instance)#rewrite pop 1
r(config-service-instance)#connect ip interface v33
r(config-service-instance)#exit
r(config-port)#exit


#Настройка динамической трансляции адресов
r(config)#interface v11
r(config-if)#ip nat inside					                            Помечаем интерфейс как внутренний
r(config-if)#exit
r(config)#interface v33
r(config-if)#ip nat inside
r(config-if)#exit

r(config)#interface Uplink			
r(config-if)#ip nat outside				                          	Помечаем интерфейс как внешний
r(config-if)#exit

r(config)#ip nat pool NAT 192.168.3.1-192.168.3.254  					          Создаем пул адресов с именем NAT
r(config)#ip nat source dynamic inside pool NAT overload 172.16.4.14		    Создаем динамические трансляции много-в-один для пакетов из внутренней сети, source IP которых будет попадать в диапазон адресов, определяемый пулом.

r(config)#exit
r#write





#########################################################################
#ESR
r#show interface status
#Uplink
r#configure
r(config)#interface gi1/0/1
r(config-if-gi)#ip address dhcp
r(config-if-gi)#ip firewall disable
r(config-if-gi)#no shutdown
r(config-if-gi)#exit
r(config)#interface gi1/0/2
r(config-if-gi)#no shutdown
r(config-if-gi)#exit

r(config)#interface gi1/0/2.33
r(config-if-gi)#ip address 192.168.2.1/29
r(config-if-gi)#ip firewall disable
r(config-if-gi)#exit

#Настройка динамической трансляции адресов

r(config)#object-group network LAN							              Создаем профиль адресов локальной сети с именем LAN
r(config-object-group-network)#ip prefix 192.168.2.0/24			Указываем префикс сети которой разрешен выход в публичную сеть
r(config-object-group-network)#exit
r(config)#nat source											                   	Конфигурируем сервис SNAT
r(config-snat)#ruleset NAT							            Создаем набор правил c именем MNAT
r(config-snat-ruleset)#to interface gi1/0/1					      	Указываем, что правила применяются только для пакетов направляющихся в публичную сеть через внешний интерфейс 
r(config-snat-ruleset)#rule 10									              Создаем правило 10
r(config-snat-rule)#match source-address LAN					      	Правила включают проверку адреса источника данных на принадлежность к пулу LAN.
r(config-snat-rule)#action source-nat interface				    	Адреса, попадающие под правило, меняют адрес на адрес внешнего интерфейса
r(config-snat-rule)#enable										                Включаем правило
r(config-snat-rule)#exit
r(config-snat-rule)#exit
r(config-snat-rule)#exit
r(config)#exit
r#commit
r#confirm
r#save



#########################################################################################
############tunnel
#Ecorouter
r(config)#interface tunnel.<НОМЕР>										                  	Создание интерфейса туннеля, где номер произвольное число, например, для R-DT interface tunnel.1
r(config-if-tunnel)#ip add <IP АДРЕС ТУННЕЛЯ>								            Назначение ip адреса, например, для R-DT ip add 10.10.10.1/30
r(config-if-tunnel)#ip mtu <ЗНАЧЕНИЕ>									                	Задание значения mtu для интерфейса, например, для R-DT  ip mtu 1400
r(config-if-tunnel)#ip tunnel <source IP> <destination IP> mode gre			Задание IP-адресов начала и конца туннеля и типа туннеля, например, для R-DT ip tunnel 172.16.4.14 172.16.6.2 mode gre
r(config-if-tunnel)#exit
r(config)#

#ESR
r(config)#tunnel gre <НОМЕР>								                  	Создаём интерфейс gre, где номер произвольное число, например, для R-BR tunnel gre 1
r(config-gre)#ip add <IP АДРЕС ТУННЕЛЯ>					            	Назначение ip адреса, например, для R-BR ip add 10.10.10.2/30
r(config-gre)#local interface <ИМЯ ВНЕШНЕГО ИНТЕРФЕЙСА>        Указываем имя внешнего интерфейса, например, для R-BR local interface gi1/0/1
r(config-gre)#remote address <ВНЕШНИЙ АДРЕС СОСЕДА>			      Указываем внешний адрес противоположенной стороны, например, для R-BR remote address 172.16.4.14
r(config-gre)#mtu <ЗНАЧЕНИЕ>									                  Задание значения mtu для интерфейса, например, для R-BR mtu 1400
r(config-gre)#ttl <ЗНАЧЕНИЕ>									                  Задание значения TTL для интерфейса, например, для R-BR ttl 64
r(config-gre)#ip firewall disable
r(config-gre)#enable
r(config-gre)#exit
r#show tunnel status



##########OSPF
#Ecorouter
r(config)#router ospf 1
r(config-router)#network 10.10.10.0/30 area 0.0.0.0
r(config-router)#network 10.10.11.0/30 area 0.0.0.0
r(config-router)#network 192.168.3.0/26 area 0.0.0.0
r(config-router)#network 192.168.3.64/29 area 0.0.0.0
r(config-router)#passive-interface default
r(config-router)#no passive-interface tunnel.1
r(config-router)#no passive-interface tunnel.2
r(config-router)#exit
r(config)#

#ESR
r(config)#router ospf 1
r(config-ospf)#area 0.0.0.0
r(config-ospf-area)#network 10.10.10.0/30
r(config-ospf-area)#network 10.10.12.0/30
r(config-ospf-area)#network 192.168.2.0/29
r(config-ospf-area)#enable
r(config-ospf-area)#exit
r(config-ospf)#enable
r(config-ospf)#exit
r(config)#
r(config-gre)#tunnel gre 1
r(config-gre)#ip ospf instance 1
r(config-gre)#ip ospf
r(config-gre)#exit
r(config)#
r(config)#do commit
r(config)#do confirm


#####Настройка OSPF парольная защита
#Ecorouter
r(config)#interface tunnel.1
r(config-if-tunnel)#ip ospf authentication
r(config-if-tunnel)#ip ospf authentication-key P@ssw0rd 
r(config-if-tunnel)#exit
r(config)#

#ESR
r(config-gre)#tunnel gre 1
r(config-gre)#ip ospf authentication key ascii-text P@ssw0rd 
r(config-gre)#ip ospf authentication algorithm cleartext
r(config-gre)#exit
r(config)#
r(config)#do commit
r(config)#do confirm


###############################################################################
###########Настройка протокола динамической конфигурации хостов
#Настройка DHCP-Server на EcoRouter
r(config)#ip pool <ИМЯ ПУЛА> <НАЧАЛЬНЫЙ АДРЕС> - <КОНЕЧНЫЙ АДРЕС>		Задаём POOL адресов с именем <ИМЯ ПУЛА> и задаём диапазон адресов, который будет раздаваться DHCP сервером
r(config)#dhcp-server <НОМЕР>										                  	Входим в режим конфигурации DHCP сервера, где <НОМЕР> – номер сервера в системе маршрутизатора
r(config-dhcp-server)#pool <ИМЯ ПУЛА> <НОМЕР> 						          	Привязываем ранее созданный POOL раздаваемых адресов с именем <ИМЯ ПУЛА> с указанием номера сервера в системе маршрутизатора <НОМЕР>
r(config-dhcp-server-pool)#gateway <АДРЕС ШЛЮЗА>						        	gateway <АДРЕС ШЛЮЗА>
r(config-dhcp-server-pool)#domain-name <ДОМЕННОЕ ИМЯ>				      	Определяем параметра DHCP 15 (доменное имя)
r(config-dhcp-server-pool)#dns <АДРЕС DNS СЕРВЕРА>						        Определяем параметра DHCP 6 (список DNS-серверов)
r(config-dhcp-server-pool)#exit
r(config-dhcp-server)#exit
r(config)#
r(config)#interface <ИМЯ ИНТЕРФЕЙСА>										               Указываем, на каком интерфейсе маршрутизатор будет принимать пакеты DHCP Discover и отвечать на них предложением с IP-настройками
r(config-if)#dhcp-server <НОМЕР>
r(config-if)#exit
r(config)#


#Настройка DHCP-Server на vESR
r(config)#ip dhcp-server pool <ИМЯ ПУЛА>										                  Создадим пул адресов с именем <ИМЯ ПУЛА>
r(config-dhcp-server)#network <IP АДРЕС СЕТИ>							                	Указываем адрес сети, из которой выдавать адреса
r(config-dhcp-server)#address-range <НАЧАЛЬНЫЙ АДРЕС> - <КОНЕЧНЫЙ АДРЕС>		  Определяем диапазон адресов, разрешенных для распределения
r(config-dhcp-server)#excluded-address-range <АДРЕС> - <АДРЕС>			        	Определяем диапазон адресов, не разрешенных для распределения (команду можно повторять сколько угодно раз, для исключения нужных адресов или диапазонов)
r(config-dhcp-server)#default-router <АДРЕС ШЛЮЗА>						              	Определяем параметра DHCP 3 (список маршрутизаторов по умолчанию)
r(config-dhcp-server)#domain-name "<ДОМЕННОЕ ИМЯ>"						               	Определяем параметра DHCP 15 (доменное имя)		
r(config-dhcp-server)#dns-server <АДРЕС DNS 1>, <АДРЕС DNS 2>			        	Определяем параметра DHCP 6 (список DNS-серверов)
r(config-dhcp-server)#exit

r(config)#ip dhcp-server														Включаем DHCP-сервер







































